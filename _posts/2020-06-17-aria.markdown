---
title: WAI-ARIA
---

<div class="post-stitle">WAI-ARIA란?</div>
사용자 인터페이스 구성 요소의 접근성을 증가시키는 방법에 대해 규정한 W3C가 출판한 기술 사양

{% highlight bash %}
<a href="#">음악 재생<／a> # 스크린리더 링크로 인식
<a href="#" role="button">음악 재생<／a> # 스크린리더 버튼으로 인식
{% endhighlight %}
:button태그 사용을 하지 않아도, 사용자에게 올바른 정보 전달.

<div class="post-stitle">독립형 widget roles</div>
<ul>
    <li>button</li>
    <li>checkbox</li>
    <li>gridcell</li>
    <li>link</li>
    <li>menuitem</li>
    <li>menuitemcheckbox</li>
    <li>menuitemradio</li>
    <li>option</li>
    <li>progressbar</li>
    <li>radio</li>
    <li>scrollbar</li>
    <li>searchbox</li>
    <li>separator</li>
    <li>slider</li>
    <li>spinbutton</li>
    <li>switch</li>
    <li>tab</li>
    <li>tabpanel</li>
    <li>textbox</li>
    <li>treeitem</li>
</ul>

<div class="post-stitle">복합형 widget roles</div>
<div class="title-desc">단독으로 쓰이지 않음</div>
<ul>
    <li>combobox</li>
    <li>grid</li>
    <li>listbox</li>
    <li>menu</li>
    <li>menubar</li>
    <li>radiogroup</li>
    <li>tablist</li>
    <li>tree</li>
    <li>treegrid</li>
</ul>

<div class="code-title">tablist 사용 예</div>

{% highlight bash %}
// tablist를 사용한 탭메뉴 예시 
<div class="tab_wrap">
    # 탭메뉴 
    # role="tablist"을 사용하여 탭메뉴 역할 부여 
    <ul role="tablist" class="list_tab">
        <li role="tab" tabindex="0" aria-selected="ture" aria-controls="section1" id="tab1">탭메뉴1<／li>
        <li role="tab" tabindex="0" aria-selected="false" aria-controls="section2" id="tab2">탭메뉴2<／li>
        <li role="tab" tabindex="0" aria-selected="false" aria-controls="section3" id="tab3">탭메뉴3<／li>
    <／ul>
           # 1. role="tab"을 사용하여 탭메뉴의 탭요소 역할 부여
           # 2. aria-controls="{ID}"를 사용하여 해당 탭의 본문과 연결
           # 3. aria-seleceted="{boolen}"를 사용하여 해당 탭이 선택유무 명시
           # 4. 초점을 받지 못하는 li요소에 tabindex="0"을 사용하여 초점을 받게함
 
   // 탭메뉴 본문 
    <div class="tab_content">           
        <section role="tabpanel" id="section1" aria-labelledby="tab1">탭메뉴1의 본문<／section>
        <section role="tabpanel" id="section2" aria-labelledby="tab2">탭메뉴2의 본문<／section>
        <section role="tabpanel" id="section3" aria-labelledby="tab3">탭메뉴3의 본문<／section>                              
    <／div>
           #  1. role="tabpanel"을 사용하여 탭메뉴의 본문 역할 부여
           #  2. aria-labelledby="{ID}을 사용하여 탭메뉴와 본문 연결"
<／div>
{% endhighlight %}

<div class="table-title">사용된 WAI-ARIA</div>
<table class="table-row">
    <colgroup>
        <col style="width:25%">
        <col>
    </colgroup>
    <tbody>
        <tr>
            <th>role="tablist"</th>
            <td>role="tab"과 함께 사용되며 탭목록 역할을 부여</td>
        </tr>
        <tr>
            <th>role="tab"</th>
            <td>role="tablist"의 자식속성으로 사용되며 탭 역할을 부여</td>
        </tr>
        <tr>
            <th>role="tabpanel"</th>
            <td>탭의 본문 역할을 부여</td>
        </tr>
        <tr>
            <th>aria-controls=""</th>
            <td>현재 요소가 제어하는 대상을 명시하는 속성으로 탭메뉴와 본문을 연결. <u>상태 값은 tabpanel의 id명 입력</u></td>
        </tr>
        <tr>
            <th>aria-selected=""</th>
            <td>탭메뉴 선택 유무를 알려줌. <u>상태 값은 선택되었을 때 true 선택되지 않았을 때 false 입력</u></td>
        </tr>
        <tr>
            <th>tabindex=""</th>
            <td>키보드로 포커스를 받을 수 없는 요소일 때 포커스를 받을 수 있게 해줌. <u>상태 값은 포커스를 받지 않을 때 -1 포커스 받을 때 0 우선으로 포커스 받을 때 1</u></td>
        </tr>
        <tr>
            <th>aria-labelledby=""</th>
            <td>레이블 제공을 위한 aria-속성. <u>상태 값은 연결시킬 레이블 id를 입력</u></td>
        </tr>
    </tbody>
</table>

<div class="post-stitle">문서구조를 설명하는 목적의 roles</div>
<ul>
    <li>application</li>
    <li>article</li>
    <li>cell</li>
    <li>columnheader</li>
    <li>definition</li>
    <li>directory</li>
    <li>document</li>
    <li>feed</li>
    <li>figure</li>
    <li>group</li>
    <li>heading</li>
    <li>img</li>
    <li>list</li>
    <li>listitem</li>
    <li>math</li>
    <li>none</li>
    <li>note</li>
    <li>presentation</li>
    <li>row</li>
    <li>rowgroup</li>
    <li>rowheader</li>
    <li>separator</li>
    <li>table</li>
    <li>term</li>
    <li>toolbar</li>
    <li>tooltip</li>
</ul>

<div class="code-title">tooltip role 사용 예</div>

{% highlight bash %}
# tooltip 속성을 사용한 툴팁 예시 
<label for="birth">생년월일<／label>
<input aria-describedby="birth_tip" id="birth">
# role="tooltip"속성을 사용하여 <input>요소에 대한 참고문구 요소를 작성하고  <input>요소에 inputaria-describedby로 연결시켜준다.
<p role="tooltip" id="birth_tip">주민등록번호 앞자리를 입력해주세요<／p>
{% endhighlight %}

<div class="table-title">사용된 WAI-ARIA</div>
<table class="table-row">
    <colgroup>
        <col style="width:25%">
        <col>
    </colgroup>
    <tbody>
        <tr>
            <th>role="tooltip"</th>
            <td>초점을 받으면 노출되는 컨텐츠 혹은 참고용 컨텐츠의 역할을 부여</td>
        </tr>
        <tr>
            <th>aria-describedby=""</th>
            <td>현재 요소에 설명을 제공하는 속성. <u>속성 값은 참조(연결)시킬 요소의 ID값을 작성</u></td>
        </tr>
    </tbody>
</table>

<div class="post-stitle">Landmark Roles</div>
<table class="table-row">
    <colgroup>
        <col style="width:30%">
        <col>
    </colgroup>
    <tbody>
        <tr>
            <th>role="appliction"</th>
            <td>웹 콘텐츠 영역과 달리 특정 기능을 제공하는 웹 애플리케이션 영역임을 선언</td>
        </tr>
        <tr>
            <th>role="banner"</th>
            <td>사이트의 로고, 제목 등 아이덴티티를 나타낼 수 있는 정보를 포함할 수 있는 영역.<span class="text-indent">gt;header>와 비슷한 역할</span></td>
        </tr>
        <tr>
            <th>ole="navigation"</th>
            <td>링크 모음을 포함하는 웹 사이트 내비게이션 영역.span class="text-indent">&lt;nav>와 동일한 역할을 수행하여 중복사용 불가능</span></td>
        </tr>
        <tr>
            <th>role="main"</th>
            <td>&lt;main>요소와 같이 메인 콘텐츠 영역을 의미.<span class="text-indent">&lt;main>요소와 중복사용 불가능</span></td>
        </tr>
        <tr>
            <th>role="complementary"</th>
            <td>메인 콘텐츠와 분리되어도 자체의 의미가 있는 콘텐츠 영역을 의미.<span class="text-indent">&lt;aside>와 동일한 역할을 합니다. 한 페이지 내에 1개만 사용해야 하며, &lt;article>, &lt;aside>, &lt;footer>하위에 사용불가능</span></td>
        </tr>
        <tr>
            <th>role="form"</th>
            <td>검색을 위한 폼 이외에 사용자가 입력 가능한 HTML &lt;form>영역임을 의미</td>
        </tr>
        <tr>
            <th>role="search"</th>
            <td>검색을 위한 폼 영역임을 의미</td>
        </tr>
        <tr>
            <th>role="contentinfo"</th>
            <td>문서의 메타정보를 담을 수 있는 영역<span class="text-indent">&lt;footer>와 함께 사용하는 경우 한 개의 요소만을 사용</span></td>
        </tr>
    </tbody>
</table>

<div class="post-stitle">Property (속성) & State (상태)</div>
<div class="title-desc"><strong>Property (속성) : </strong>해당 컴포넌트의 특징이나 상황을 정의하며 속성명으로 <code class="language-plaintext highlighter-rouge">aria-*</code>라는 접두사를 사용<br><strong>State (상태) : </strong>해당 컴포넌트의 상태 정보를 정의</div>

<div class="post-stitie">Widget states and properties</div>
<ul>
    <li>autocomplete</li>
    <li>checked</li>
    <li>datatype</li>
    <li>disabled</li>
    <li>expanded</li>
    <li>haspopup</li>
    <li>invalid</li>
    <li>level</li>
    <li>multiline</li>
    <li>multiselectable</li>
    <li>pressed</li>
    <li>readonly</li>
    <li>required</li>
    <li>secret</li>
    <li>selected</li>
    <li>valuemax</li>
    <li>valuemin</li>
    <li>valuenow</li>
</ul>

<div class="code-title">combobox 사용 예</div>

{% highlight bash %}
# combobox를 사용한 자동완성 폼 예시  
<div class="combobox_wrap">
    <div aria-haspopup="listbox" aria-expanded="false" role="combobox" id="combobox" class="combobox" aria-owns="comboListbox">
        <label id="comboboxLabel" for="comboboxInput">성별 입력 (여성 or 남성)<／label>   
        <input id="comboboxInput" aria-autocomplete="list" aria-labelledby="comboboxLabel" name="comboboxInput">     
           #  1. aria-labelledby="{ID}"를 사용하여 해당요소의 참고컨텐츠를 연결한다.
           #  2. aria-autocomplete="list"를 사용하여 자동완성 기능이 있음을 알려준다.
    <／div>
        #  1. role="combobox"을 사용하여 펼쳐지는 메뉴를 가지고 있다는 것을 알려준다.
        #  2. aria-expanded="{boolen}"을 사용하여 하위메뉴 펼쳐짐 여부를 알려준다.
        #  3. aria-owns="{ID}"을 사용하여 하위메뉴와의 부모관계를 설정한다.
        #  4. aria-haspopup="listbox"을 사용하여 갖고있는 하위메뉴의 성격을 알려준다. 

    #하위메뉴  
    <ul id="comboListbox" aria-labelledby="comboboxLabel">
    <／ul>
<／div>
{% endhighlight %}

<div class="table-title">사용된 WAI-ARIA</div>
<table class="table-row">
    <colgroup>
        <col style="width:25%">
        <col>
    </colgroup>
    <tbody>
        <tr>
            <th>role="combobox"</th>
            <td>아래에 매뉴가 펼쳐지는 UI의 역할을 부여</td>
        </tr>
        <tr>
            <th>aria-expanded=""</th>
            <td>펼쳐지거나 닫힐 수 있는 컨텐츠의 상태를 표시하는 aria-속성. <u>상태 값은 펼침 true 닫힘 false</u></td>
        </tr>
        <tr>
            <th>aria-labelledby=""</th>
            <td>레이블 제공을 위한 aria-속성. <u>상태 값은 연결시킬 레이블 id를 입력</u></td>
        </tr>
        <tr>
            <th>aria-autocomplete=""</th>
            <td>사용자 입력에 대한 자동완성 지원 여부를 설정하는 aria-속성. <u>상태 값은 inline list both none(default)</u></td>
        </tr>
        <tr>
            <th>aria-owns=""</th>
            <td>부모/자식 관계 형성하는 aria-속성. <u>상태 값은 자식으로 설정할 요소의 id값 (aria-controls와 관련)</u></td>
        </tr>
        <tr>
            <th>aria-haspopup=""</th>
            <td>팝업요소가 하위에 존재하고 있다는걸 인식 시켜주는 aria-속성. <u>상태 값은 false(default) true menu listbox tree gird dialog</u></td>
        </tr>
    </tbody>
</table>

<div class="post-stitle">Live Regions</div>
<ul>
    <li>aria-live</li>
    <li>aria-relevant</li>
    <li>aria-atomic</li>
    <li>and aria-busy</li>
</ul>

<div class="code-title">aria-live 사용 예</div>

{% highlight bash %}
# aria-live를 사용한 알럿창 예시 
<div role="alert" aria-live="assertive">
    <p>접속 할 수 없습니다 !<／p>
<／div>
    #  1. role="alert"를 사용하여 해당 요소에 얼럿 역할을 부여한다.
    #  2. aria-live="assertive"를 사용하여 실시간으로 업데이트된 정보를 사용자에게 전달한다.
{% endhighlight %}

<div class="table-title">사용된 WAI-ARIA</div>
<table class="table-row">
    <colgroup>
        <col style="width:25%">
        <col>
    </colgroup>
    <tbody>
        <tr>
            <th>role="alert"</th>
            <td>경고,알림 등의 컨텐츠 역할 부여</td>
        </tr>
        <tr>
            <th>aria-live</th>
            <td>페이지의 어떤 위치에 있든 업데이트된 정보를 사용자에게 알려주는 aria-속성. <u>상태 값은 assertive off(default) polite</u></td>
        </tr>
    </tbody>
</table>

<div class="post-stitle">Drag and Drop</div>
<ul>
    <li>aria-dropeffect</li>
    <li>aria-grabbed</li>
</ul>

<div class="code-title">aria-dropeffect 사용 예</div>

{% highlight bash %}
# aria-dropeffect를 사용한 Sorting List 예시
# role="listbox"를 사용하여 선택가능한 옵션이 존재하는 리스트의 역할을 부여한다.
<ol role="listbox">
    <li role="option" tabindex="0" aria-dropeffect="false" draggable="true">아이스크림<／li>
    <li role="option" tabindex="0" aria-dropeffect="false" draggable="true">파이<／li>
    <li role="option" tabindex="0" aria-dropeffect="false" draggable="true">케이크<／li>
    <li role="option" tabindex="0" aria-dropeffect="false" draggable="true">컵케이크<／li>
<／ol>
    #  1. role="option"을 사용하여 리스트의 옵션 역할을 부여한다.
    #  2. draggable="true"을 사용하여 해당 요소에 드래그&드롭 기능을 넣어준다
    #  3. aria-dropeffect를 사용하여 요소를 드롭하였을 때 사용자에게 알려준다.
    #  4. 초점을 받지 못하는 li요소에 tabindex="0"을 사용하여 초점을 받게한다.
{% endhighlight %}

<div class="table-title">사용된 WAI-ARIA</div>
<table class="table-row">
    <colgroup>
        <col style="width:25%">
        <col>
    </colgroup>
    <tbody>
        <tr>
            <th>role="listbox"</th>
            <td>role="option"과 함께쓰이는 복합형 Role 속성이며 선택가능한 옵션이 존재하는 리스트 역할을 부여</td>
        </tr>
        <tr>
            <th>role="option"</th>
            <td>role="listbox"와 함께 쓰이며 부모인 리스트의 옵션이라는 역할을 부여</td>
        </tr>
        <tr>
            <th>aria-dropeffect=""</th>
            <td>요소가 드롭되었을 때 사용자에게 알려줌. <u>상태값은 true false</u></td>
        </tr>
        <tr>
            <th>tabindex=""</th>
            <td>키보드로 포커스를 받을 수 없는 요소일 때 포커스를 받을 수 있게 해줌. <u>상태 값은 포커스를 받지 않을 때 -1 포커스 받을 때 0 우선으로 포커스 받을 때 1</u></td>
        </tr>
    </tbody>
</table>

<div class="post-stitle">Relationship</div>
<ul>
    <li>aria-activedescendant</li>
    <li>aria-colcount</li>
    <li>aria-colindex</li>
    <li>aria-colspan</li>
    <li>aria-controls</li>
    <li>aria-describedby</li>
    <li>aria-details</li>
    <li>aria-errormessage</li>
    <li>aria-flowto</li>
    <li>aria-labelledby</li>
    <li>aria-owns</li>
    <li>aria-posinset</li>
    <li>aria-rowcount</li>
    <li>aria-rowindex</li>
    <li>aria-rowspan</li>
    <li>aria-setsize</li>
</ul>

<div class="code-title">aria-aria-controls, aria-labelledby 사용 예</div>

{% highlight bash %}
<ul role="tablist" class="list_tab"> 
    #탭요소에 aria-controls="{ID}" 속성을 사용하여 해당 탭 요소가 제어하고 있는 대상(본문)을 연결시켜준다.
    <li role="tab" tabindex="0" aria-selected="ture" aria-controls="section1" id="tab1">탭메뉴1<／li>
    <li role="tab" tabindex="0" aria-selected="false" aria-controls="section2" id="tab2">탭메뉴2<／li>
    <li role="tab" tabindex="0" aria-selected="false" aria-controls="section3" id="tab3">탭메뉴3<／li>
<／ul>
#탭메뉴 본문
<div class="tab_content">
    #aria-labelledby="{ID}"을 사용하여 해당 본문의 레이블을 연결시켜준다
    <section role="tabpanel" id="section1" aria-labelledby="tab1">탭메뉴1의 본문<／section>
    <section role="tabpanel" id="section2" aria-labelledby="tab2">탭메뉴2의 본문<／section>
    <section role="tabpanel" id="section3" aria-labelledby="tab3">탭메뉴3의 본문<／section>                              
<／div>
{% endhighlight %}

<div class="table-title">사용된 WAI-ARIA</div>
<table class="table-row">
    <colgroup>
        <col style="width:25%">
        <col>
    </colgroup>
    <tbody>
        <tr>
            <th>aria-labelledby=""</th>
            <td>레이블 제공을 위한 aria-속성. <u>상태 값은 연결시킬 레이블 id를 입력</u></td>
        </tr>
        <tr>
            <th>aria-controls=""</th>
            <td>현재 요소가 제어하는 대상을 명시하는 속성으로 탭메뉴와 본문을 연결. <u>상태 값은 tabpanel의 id명 입력</u></td>
        </tr>
        <tr>
            <th>aria-selected=""</th>
            <td>탭메뉴 선택 유무를 알려줌. <u>상태 값은 선택되었을 때 true / 선택되지 않았을 때 false 입력</u></td>
        </tr>
        <tr>
            <th>tabindex=""</th>
            <td>키보드로 포커스를 받을 수 없는 요소일 때 포커스를 받을 수 있게 해줌. <u>상태 값은 포커스를 받지 않을 때 -1 포커스 받을 때 0 우선으로 포커스 받을 때 1</u></td>
        </tr>
    </tbody>
</table>

<div class="notice-title">유의사항</div>
<ul>
    <li>W3C에서는 HTML5 섹션 관련 요소와 WAI-ARIA 규칙을 함께 사용할 경우 해당 기능이 무효화 되거나 충돌이 발생할 수 있으므로 중복해서 사용하지 않도록 주의<span class="text-indent">ex) &lt;header role="banner">&lt;/header>&lt;/span>&lt;/li>(X)</span></li>
    <li>원래의 HTML 요소의 의미를 변경하면 안된다.<span class="text-ionent">ex) &lt;h1 role="button">&lt;/h1>(X)</span></li>
    <li>모든 RIA 컨텐츠는 키보드를 사용하여 접근 가능해야함</li>
    <li>모든 브라우저와 보조기기가 WAI-ARIA를 지원하지 않기 때문에 지원하는 브라우저와 기기 정보를 확인하고 적용</li>
</ul>

<hr style="margin-top:30px;">
link 
[출처-eatdesinglove](https://eatdesignlove.github.io/post/first-WAI-ARIA)
[출차-맑은](https://www.biew.co.kr/36)